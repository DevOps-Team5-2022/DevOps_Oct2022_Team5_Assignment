name: CI for Dev
on:
  pull_request:
  
jobs:
  testDevCode:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11          
      - name: Install Libraries
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov		  
      - name: Checkout own repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-Team5-2022/DevOps_Oct2022_Team5_Assignment
          fetch-depth: "0"          
      - name: list our contents
        run: |
          ls
      - name: Test Dev's script
        run: |
          pytest Dev_Test.py -v -cov --junitxml=devReportDevCode.xml
      - if: failure()
        uses: JasonEtco/create-an-issue@v2.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE.md
          update_existing: true
          search_existing: all
      
      - name: send telegram message on push
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            Repository: ${{ github.repository }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Dev pytest failed
    
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "devReportDevCode.xml"
      - name: create folder & move files
        if: always()
        run: |
          mkdir downloads
          mv *.xml ./downloads
        

      - name: Upload document
        if: always()
        uses: actions/upload-artifact@v2
        with: 
          name: devTestResultsDev
          path: downloads
      - name: Set environment version
        if: always()
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: download remote information
        if: always()
        uses: actions/download-artifact@v2
        with:
          name: devTestResultsDev
      

          

        
  testQACode:
    needs: testDevCode
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11          
      - name: Install Libraries
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov		  
      - name: Checkout own repo
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"          
      - name: get QA Pytest
        run: |
          git --version
          git config user.name "Villicus-np"
          git config user.email "kevinkhew01@gmail.com"
          git status
          git checkout remotes/origin/main QA_Test.py

      - name: list our contents
        run: |
          ls
      - name: Test QA's script
        run: |
          pytest QA_Test.py -v -cov --junitxml=devReportQACode.xml
      - if: failure()
        uses: JasonEtco/create-an-issue@v2.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/missingFeatures.md
          update_existing: true
          search_existing: all
          
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: "devReportQACode.xml"
      
      - name: create folder & move files
        if: always()
        run: |
          mkdir downloads
          mv *.xml ./downloads
          
      - name: Upload document
        if: always()
        uses: actions/upload-artifact@v2
        with: 
          name: devTestResultsQA
          path: downloads
      - name: Set environment version
        if: always()
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: download remote information
        if: always()
        uses: actions/download-artifact@v2
        with:
          name: devTestResultsQA
          
      - name: send telegram message on push
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            Repository: ${{ github.repository }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            QA pytest failed
      
