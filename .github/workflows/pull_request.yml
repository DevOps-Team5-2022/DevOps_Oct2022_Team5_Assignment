name: pr-labeler

on: 
  pull_request:

jobs:
  pullRequest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11          
      - name: Install Libraries
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov		  
      - name: Checkout own repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-Team5-2022/DevOps_Oct2022_Team5_Assignment
          fetch-depth: "0"          
      - name: list our contents
        run: |
          ls
      - name: Test Dev's script
        run: |
          pytest Dev_Test.py -v -cov --junitxml=ReportDevCode.xml
          pytest QA_Test.py -v -cov --junitxml=ReportQACode.xml
      - if: failure()
        uses: JasonEtco/create-an-issue@v2.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE.md
          update_existing: true
          search_existing: all
      
      - name: send telegram message on push
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            
            Repository: ${{ github.repository }}
            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Pytest failed
    
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: |
            *.xml
      - name: create folder & move files
        if: always()
        run: |
          mkdir downloads
          mv *.xml ./downloads
        
      - name: Upload document
        if: always()
        uses: actions/upload-artifact@v2
        with: 
          name: pullRequestDocument
          path: downloads
      - name: Set environment version
        if: always()
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: download remote information
        if: always()
        uses: actions/download-artifact@v2
        with:
          name: pullRequestDocument
      - name: Label the PR size
        if: always()
        uses: coverwallet/pr-labeler@v1.2.1
        with:
          xs_max_size: '10'
          s_max_size: '100'
          m_max_size: '500'
          l_max_size: '1000'
          exclude_files: '.txt'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          
      - name: Notify Team for PR
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            A PULL REQUEST was created.

            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
              
